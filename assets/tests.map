{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","nike/tests/app.lint-test.js","nike/tests/helpers/create-offline-ref.js","nike/tests/helpers/destroy-app.js","nike/tests/helpers/destroy-firebase-apps.js","nike/tests/helpers/ember-basic-dropdown.js","nike/tests/helpers/ember-power-select.js","nike/tests/helpers/module-for-acceptance.js","nike/tests/helpers/replace-app-ref.js","nike/tests/helpers/replace-firebase-app-service.js","nike/tests/helpers/resolver.js","nike/tests/helpers/start-app.js","nike/tests/helpers/stub-firebase.js","nike/tests/helpers/torii.js","nike/tests/helpers/unstub-firebase.js","nike/tests/integration/components/add-label-test.js","nike/tests/integration/components/add-task-test.js","nike/tests/integration/components/login-component-test.js","nike/tests/integration/components/navigation-component-test.js","nike/tests/integration/components/tasks-timeline-test.js","nike/tests/integration/components/view-labels-test.js","nike/tests/test-helper.js","nike/tests/tests.lint-test.js","nike/tests/unit/models/label-test.js","nike/tests/unit/models/task-test.js","nike/tests/unit/models/user-test.js","nike/tests/unit/routes/home-test.js","nike/tests/unit/routes/labels-test.js","nike/tests/unit/routes/tasks-test.js","nike/tests/unit/routes/users-test.js","nike/tests/unit/services/authentication-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('nike/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/add-label.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/add-label.js should pass ESLint\\n\\n7:6 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('components/add-task.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/add-task.js should pass ESLint\\n\\n13:6 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('components/login-component.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/login-component.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/navigation-component.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/navigation-component.js should pass ESLint\\n\\n15:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('components/tasks-timeline.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/tasks-timeline.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/view-labels.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/view-labels.js should pass ESLint\\n\\n6:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('models/label.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/label.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/task.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/task.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/user.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/user.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/application.js should pass ESLint\\n\\n8:9 - Unexpected console statement. (no-console)\\n12:5 - Unexpected console statement. (no-console)\\n21:6 - Unexpected console statement. (no-console)\\n24:8 - Unexpected console statement. (no-console)\\n25:8 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/labels.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/labels.js should pass ESLint\\n\\n18:6 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/tasks.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/tasks.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/users.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/users.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('services/authentication.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/authentication.js should pass ESLint\\n\\n10:5 - Unexpected console statement. (no-console)\\n25:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('torii-adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'torii-adapters/application.js should pass ESLint\\n\\n');\n  });\n});","define('nike/tests/helpers/create-offline-ref', ['exports', 'firebase'], function (exports, _firebase) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createOfflineRef;\n\n\n  /**\n   * Creates an offline firebase reference with optional initial data and url.\n   *\n   * Be sure to `stubfirebase()` and `unstubfirebase()` in your tests!\n   *\n   * @param  {!Object} [initialData]\n   * @param  {string} [url]\n   * @param  {string} [apiKey]\n   * @return {!firebase.database.Reference}\n   */\n  function createOfflineRef(initialData) {\n    var url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'https://emberfire-tests-2c814.firebaseio.com';\n    var apiKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'AIzaSyC9-ndBb1WR05rRF1msVQDV6EBqB752m6o';\n\n\n    if (!_firebase.default._unStub) {\n      throw new Error('Please use stubFirebase() before calling this method');\n    }\n\n    var config = {\n      apiKey: apiKey,\n      authDomain: 'emberfire-tests-2c814.firebaseapp.com',\n      databaseURL: url,\n      storageBucket: ''\n    };\n\n    var app = void 0;\n\n    try {\n      app = _firebase.default.app();\n    } catch (e) {\n      app = _firebase.default.initializeApp(config);\n    }\n\n    var ref = app.database().ref();\n\n    app.database().goOffline(); // must be called after the ref is created\n\n    if (initialData) {\n      ref.set(initialData);\n    }\n\n    return ref;\n  }\n});","define('nike/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    _ember.default.run(application, 'destroy');\n  }\n});","define('nike/tests/helpers/destroy-firebase-apps', ['exports', 'ember', 'firebase'], function (exports, _ember, _firebase) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyFirebaseApps;\n  var run = _ember.default.run;\n\n\n  /**\n   * Destroy all Firebase apps.\n   */\n  function destroyFirebaseApps() {\n    var deletions = _firebase.default.apps.map(function (app) {\n      return app.delete();\n    });\n    _ember.default.RSVP.all(deletions).then(function () {\n      return run(function () {\n        // NOOP to delay run loop until the apps are destroyed\n      });\n    });\n  }\n});","define('nike/tests/helpers/ember-basic-dropdown', ['exports', 'ember-basic-dropdown/test-support/helpers', 'ember-native-dom-helpers'], function (exports, _helpers, _emberNativeDomHelpers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.nativeClick = exports.fireKeydown = exports.tapTrigger = exports.clickTrigger = exports.nativeTap = undefined;\n  Object.defineProperty(exports, 'nativeTap', {\n    enumerable: true,\n    get: function () {\n      return _helpers.nativeTap;\n    }\n  });\n  Object.defineProperty(exports, 'clickTrigger', {\n    enumerable: true,\n    get: function () {\n      return _helpers.clickTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'tapTrigger', {\n    enumerable: true,\n    get: function () {\n      return _helpers.tapTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'fireKeydown', {\n    enumerable: true,\n    get: function () {\n      return _helpers.fireKeydown;\n    }\n  });\n  exports.default = _helpers.default;\n  var nativeClick = exports.nativeClick = _emberNativeDomHelpers.click;\n});","define('nike/tests/helpers/ember-power-select', ['exports', 'ember-power-select/test-support/helpers'], function (exports, _helpers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.selectChoose = exports.touchTrigger = exports.nativeTouch = exports.clickTrigger = exports.typeInSearch = exports.triggerKeydown = exports.nativeMouseUp = exports.nativeMouseDown = exports.findContains = undefined;\n  Object.defineProperty(exports, 'findContains', {\n    enumerable: true,\n    get: function () {\n      return _helpers.findContains;\n    }\n  });\n  Object.defineProperty(exports, 'nativeMouseDown', {\n    enumerable: true,\n    get: function () {\n      return _helpers.nativeMouseDown;\n    }\n  });\n  Object.defineProperty(exports, 'nativeMouseUp', {\n    enumerable: true,\n    get: function () {\n      return _helpers.nativeMouseUp;\n    }\n  });\n  Object.defineProperty(exports, 'triggerKeydown', {\n    enumerable: true,\n    get: function () {\n      return _helpers.triggerKeydown;\n    }\n  });\n  Object.defineProperty(exports, 'typeInSearch', {\n    enumerable: true,\n    get: function () {\n      return _helpers.typeInSearch;\n    }\n  });\n  Object.defineProperty(exports, 'clickTrigger', {\n    enumerable: true,\n    get: function () {\n      return _helpers.clickTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'nativeTouch', {\n    enumerable: true,\n    get: function () {\n      return _helpers.nativeTouch;\n    }\n  });\n  Object.defineProperty(exports, 'touchTrigger', {\n    enumerable: true,\n    get: function () {\n      return _helpers.touchTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'selectChoose', {\n    enumerable: true,\n    get: function () {\n      return _helpers.selectChoose;\n    }\n  });\n  exports.default = _helpers.default;\n});","define('nike/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'nike/tests/helpers/start-app', 'nike/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n\n  var resolve = _ember.default.RSVP.resolve;\n});","define('nike/tests/helpers/replace-app-ref', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = replaceAppRef;\n  /**\n   * Updates the supplied app adapter's Firebase reference.\n   *\n   * @param  {!Ember.Application} app\n   * @param  {!firebase.database.Reference} ref\n   * @param  {string} [model]  The model, if overriding a model specific adapter\n   */\n  function replaceAppRef(app, ref) {\n    var model = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'application';\n\n    app.register('service:firebaseMock', ref, { instantiate: false, singleton: true });\n    app.inject('adapter:firebase', 'firebase', 'service:firebaseMock');\n    app.inject('adapter:' + model, 'firebase', 'service:firebaseMock');\n  }\n});","define('nike/tests/helpers/replace-firebase-app-service', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = replaceFirebaseAppService;\n  /**\n   * Replaces the `firebaseApp` service with your own using injection overrides.\n   *\n   * This is usually not needed in test modules, where you can re-register over\n   * existing names in the registry, but in acceptance tests, some registry/inject\n   * magic is needed.\n   *\n   * @param  {!Ember.Application} app\n   * @param  {!Object} newService\n   */\n  function replaceFirebaseAppService(app, newService) {\n    app.register('service:firebaseAppMock', newService, { instantiate: false, singleton: true });\n    app.inject('torii-provider:firebase', 'firebaseApp', 'service:firebaseAppMock');\n    app.inject('torii-adapter:firebase', 'firebaseApp', 'service:firebaseAppMock');\n  }\n});","define('nike/tests/helpers/resolver', ['exports', 'nike/resolver', 'nike/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('nike/tests/helpers/start-app', ['exports', 'ember', 'nike/app', 'nike/config/environment'], function (exports, _ember, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    var attributes = _ember.default.merge({}, _environment.default.APP);\n    attributes = _ember.default.merge(attributes, attrs); // use defaults, but you can override;\n\n    return _ember.default.run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('nike/tests/helpers/stub-firebase', ['exports', 'firebase'], function (exports, _firebase) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = stubFirebase;\n\n\n  /**\n   * When a reference is in offline mode it will not call any callbacks\n   * until it goes online and resyncs. The ref will have already\n   * updated its internal cache with the changed values so we shortcut\n   * the process and call the supplied callbacks immediately (asynchronously).\n   */\n  function stubFirebase() {\n    // check for existing stubbing\n    if (!_firebase.default._unStub) {\n      var originalSet = _firebase.default.database.Reference.prototype.set;\n      var originalUpdate = _firebase.default.database.Reference.prototype.update;\n      var originalRemove = _firebase.default.database.Reference.prototype.remove;\n\n      _firebase.default._unStub = function () {\n        _firebase.default.database.Reference.prototype.set = originalSet;\n        _firebase.default.database.Reference.prototype.update = originalUpdate;\n        _firebase.default.database.Reference.prototype.remove = originalRemove;\n      };\n\n      _firebase.default.database.Reference.prototype.set = function (data, cb) {\n        originalSet.call(this, data);\n        if (typeof cb === 'function') {\n          setTimeout(cb, 0);\n        }\n      };\n\n      _firebase.default.database.Reference.prototype.update = function (data, cb) {\n        originalUpdate.call(this, data);\n        if (typeof cb === 'function') {\n          setTimeout(cb, 0);\n        }\n      };\n\n      _firebase.default.database.Reference.prototype.remove = function (cb) {\n        originalRemove.call(this);\n        if (typeof cb === 'function') {\n          setTimeout(cb, 0);\n        }\n      };\n    }\n  }\n});","define('nike/tests/helpers/torii', ['exports', 'nike/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.stubValidSession = stubValidSession;\n  var sessionServiceName = _environment.default.torii.sessionServiceName;\n  function stubValidSession(application, sessionData) {\n    var session = application.__container__.lookup('service:' + sessionServiceName);\n\n    var sm = session.get('stateMachine');\n    Ember.run(function () {\n      sm.send('startOpen');\n      sm.send('finishOpen', sessionData);\n    });\n  }\n});","define('nike/tests/helpers/unstub-firebase', ['exports', 'firebase'], function (exports, _firebase) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = unstubFirebase;\n  function unstubFirebase() {\n    if (typeof _firebase.default._unStub === 'function') {\n      _firebase.default._unStub();\n      delete _firebase.default._unStub;\n    }\n  }\n});","define('nike/tests/integration/components/add-label-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('add-label', 'Integration | Component | add label', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"ggtFONK/\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"add-label\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"M9JzNsYH\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"add-label\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('nike/tests/integration/components/add-task-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('add-task', 'Integration | Component | add task', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"6TsHE/hS\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"add-task\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"wkbrEK7j\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"add-task\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('nike/tests/integration/components/login-component-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('login-component', 'Integration | Component | login component', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"MczdePYm\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"login-component\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"QLewUPSB\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"login-component\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('nike/tests/integration/components/navigation-component-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('navigation-component', 'Integration | Component | navigation component', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"eOm4ib4c\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"navigation-component\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"GiOtw1/f\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"navigation-component\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('nike/tests/integration/components/tasks-timeline-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('tasks-timeline', 'Integration | Component | tasks timeline', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"6/LOY9Py\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"tasks-timeline\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"M+JPko71\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"tasks-timeline\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('nike/tests/integration/components/view-labels-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('view-labels', 'Integration | Component | view labels', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"64S9mHVB\",\n      \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"view-labels\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"kC/Ytg/A\",\n      \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[6,[\\\"view-labels\\\"],null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('nike/tests/test-helper', ['nike/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (_resolver, _emberQunit, _emberCliQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n  (0, _emberCliQunit.start)();\n});","define('nike/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/add-label-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/add-label-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/add-task-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/add-task-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/login-component-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/login-component-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/navigation-component-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/navigation-component-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/tasks-timeline-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/tasks-timeline-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/view-labels-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/view-labels-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/label-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/label-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/task-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/task-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/user-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/user-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/home-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/labels-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/labels-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/tasks-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/tasks-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/users-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/users-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/authentication-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/authentication-test.js should pass ESLint\\n\\n');\n  });\n});","define('nike/tests/unit/models/label-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('label', 'Unit | Model | label', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('nike/tests/unit/models/task-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('task', 'Unit | Model | task', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('nike/tests/unit/models/user-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('user', 'Unit | Model | user', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('nike/tests/unit/routes/home-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:home', 'Unit | Route | home', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('nike/tests/unit/routes/labels-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:labels', 'Unit | Route | labels', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('nike/tests/unit/routes/tasks-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:tasks', 'Unit | Route | tasks', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('nike/tests/unit/routes/users-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:users', 'Unit | Route | users', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('nike/tests/unit/services/authentication-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('service:authentication', 'Unit | Service | authentication', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","require('nike/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;","file":"tests.js"}